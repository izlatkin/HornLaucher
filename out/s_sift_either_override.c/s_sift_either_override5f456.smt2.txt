(set-info :original "../out/s_sift_either_override.c/s_sift_either_override5f456.bc.txt")
(set-info :authors "SeaHorn v.10.0.0-rc0")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry ())
(declare-rel main@verifier.error.split ())
(declare-var main@%_5_0 Int )
(declare-var main@%_6_0 Int )
(declare-var main@%_7_0 Bool )
(declare-var main@%_2_0 Bool )
(declare-var main@%_3_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@%sm_0 (Array Int Int) )
(declare-var main@%_0_0 Int )
(declare-var main@%_1_0 Int )
(declare-var main@_4_0 Bool )
(declare-var main@verifier.error_0 Bool )
(declare-var |tuple(main@entry_0, main@verifier.error_0)| Bool )
(declare-var main@verifier.error.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule main@entry)
(rule (let ((a!1 (=> main@_4_0 (= main@%_5_0 (+ main@%_0_0 (* 0 44) 4 8))))
      (a!2 (= main@%_7_0
              (ite (>= main@%_1_0 0)
                   (ite (>= main@%_6_0 0) (< main@%_1_0 main@%_6_0) true)
                   (ite (< main@%_6_0 0) (< main@%_1_0 main@%_6_0) false)))))
(let ((a!3 (and main@entry
                true
                (not main@%_2_0)
                (=> main@_4_0 (and main@_4_0 main@entry_0))
                (=> (and main@_4_0 main@entry_0) main@%_3_0)
                a!1
                (=> main@_4_0 (or (<= main@%_0_0 0) (> main@%_5_0 0)))
                (=> main@_4_0 (> main@%_0_0 0))
                (=> main@_4_0 (= main@%_6_0 (select main@%sm_0 main@%_5_0)))
                (=> main@_4_0 a!2)
                (=> main@_4_0 (not main@%_7_0))
                (=> |tuple(main@entry_0, main@verifier.error_0)| main@entry_0)
                (=> main@verifier.error_0
                    (or |tuple(main@entry_0, main@verifier.error_0)|
                        (and main@verifier.error_0 main@_4_0)))
                (=> |tuple(main@entry_0, main@verifier.error_0)|
                    (not main@%_3_0))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!3 main@verifier.error.split))))
(query main@verifier.error.split)

