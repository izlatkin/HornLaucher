(set-info :original "../out/aws_mul_size_saturating_harness.c/aws_mul_size_saturating_harness0c78f.bc.txt")
(set-info :authors "SeaHorn v.10.0.0-rc0")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel aws_mul_u64_saturating@_sm ((Array Int Int) Int Int ))
(declare-rel aws_mul_u64_saturating@.split ((Array Int Int) Int Int Int ))
(declare-rel aws_mul_u64_saturating (Bool Bool Bool (Array Int Int) (Array Int Int) Int Int Int ))
(declare-rel aws_mul_u32_saturating@_sm ((Array Int Int) Int Int ))
(declare-rel aws_mul_u32_saturating@.split ((Array Int Int) Int Int Int ))
(declare-rel aws_mul_u32_saturating (Bool Bool Bool (Array Int Int) (Array Int Int) Int Int Int ))
(declare-rel main@entry (Int Int Int Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) ))
(declare-rel main@verifier.error.split ())
(declare-var aws_mul_u64_saturating@%sm_0 (Array Int Int) )
(declare-var aws_mul_u64_saturating@arg.1_0 Int )
(declare-var aws_mul_u64_saturating@arg.0_0 Int )
(declare-var aws_mul_u64_saturating@%_br_0 Int )
(declare-var aws_mul_u64_saturating@_sm_0 Bool )
(declare-var aws_mul_u64_saturating@.split_0 Bool )
(declare-var aws_mul_u32_saturating@%sm_0 (Array Int Int) )
(declare-var aws_mul_u32_saturating@arg.1_0 Int )
(declare-var aws_mul_u32_saturating@arg.0_0 Int )
(declare-var aws_mul_u32_saturating@%_br_0 Int )
(declare-var aws_mul_u32_saturating@_sm_0 Bool )
(declare-var aws_mul_u32_saturating@.split_0 Bool )
(declare-var main@%_7_0 Int )
(declare-var @nondet_int_0 Int )
(declare-var main@%_8_0 Int )
(declare-var main@%_9_0 Bool )
(declare-var main@%_10_0 Int )
(declare-var main@%_11_0 Int )
(declare-var @nondet_uint64_t_0 Int )
(declare-var main@%_12_0 Int )
(declare-var main@%_13_0 Int )
(declare-var main@%_14_0 Int )
(declare-var main@%_15_0 Bool )
(declare-var main@%_17_0 Int )
(declare-var main@%_18_0 Bool )
(declare-var main@%not..i_0 Bool )
(declare-var main@%_19_0 Int )
(declare-var main@%_20_0 Int )
(declare-var @nondet_uint32_t_0 Int )
(declare-var main@%_21_0 Int )
(declare-var main@%_22_0 Int )
(declare-var main@%_23_0 Int )
(declare-var main@%_24_0 Bool )
(declare-var main@%shadow.mem.0.0_1 (Array Int Int) )
(declare-var @s_common_log_subject_list_0 Int )
(declare-var @s_common_log_subject_infos_0 Int )
(declare-var main@%sm19_0 (Array Int Int) )
(declare-var main@%sm_0 (Array Int Int) )
(declare-var main@%sm17_0 (Array Int Int) )
(declare-var main@%sm1_0 (Array Int Int) )
(declare-var main@%sm22_0 (Array Int Int) )
(declare-var main@%sm2_0 (Array Int Int) )
(declare-var main@%sm21_0 (Array Int Int) )
(declare-var main@%sm3_0 (Array Int Int) )
(declare-var main@%sm23_0 (Array Int Int) )
(declare-var main@%sm4_0 (Array Int Int) )
(declare-var main@%sm27_0 (Array Int Int) )
(declare-var main@%sm5_0 (Array Int Int) )
(declare-var main@%sm16_0 (Array Int Int) )
(declare-var main@%sm6_0 (Array Int Int) )
(declare-var main@%sm18_0 (Array Int Int) )
(declare-var main@%sm7_0 (Array Int Int) )
(declare-var main@%sm24_0 (Array Int Int) )
(declare-var main@%sm8_0 (Array Int Int) )
(declare-var main@%sm20_0 (Array Int Int) )
(declare-var main@%sm9_0 (Array Int Int) )
(declare-var main@%sm26_0 (Array Int Int) )
(declare-var main@%sm10_0 (Array Int Int) )
(declare-var main@%sm25_0 (Array Int Int) )
(declare-var main@%sm11_0 (Array Int Int) )
(declare-var main@%sm12_0 (Array Int Int) )
(declare-var main@%_0_0 Int )
(declare-var main@%_1_0 Int )
(declare-var main@%sm13_0 (Array Int Int) )
(declare-var main@%_2_0 Int )
(declare-var main@%_3_0 Bool )
(declare-var main@%_4_0 Int )
(declare-var main@%_5_0 Bool )
(declare-var @nondet_bool_0 Int )
(declare-var main@entry_0 Bool )
(declare-var main@%sm14_0 (Array Int Int) )
(declare-var main@_16_0 Bool )
(declare-var main@%sh15_0 (Array Int Int) )
(declare-var main@_6_0 Bool )
(declare-var main@%sh_0 (Array Int Int) )
(declare-var main@verifier.error_0 Bool )
(declare-var main@%shadow.mem.0.0_0 (Array Int Int) )
(declare-var main@%shadow.mem.0.0_2 (Array Int Int) )
(declare-var main@verifier.error.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (aws_mul_u64_saturating
  true
  true
  true
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@arg.0_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@%_br_0))
(rule (aws_mul_u64_saturating
  false
  true
  true
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@arg.0_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@%_br_0))
(rule (aws_mul_u64_saturating
  false
  false
  false
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@arg.0_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@%_br_0))
(rule (aws_mul_u64_saturating@_sm
  aws_mul_u64_saturating@%sm_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@arg.0_0))
(rule (=> (and (aws_mul_u64_saturating@_sm
           aws_mul_u64_saturating@%sm_0
           aws_mul_u64_saturating@arg.1_0
           aws_mul_u64_saturating@arg.0_0)
         true
         (=> aws_mul_u64_saturating@.split_0
             (and aws_mul_u64_saturating@.split_0 aws_mul_u64_saturating@_sm_0))
         aws_mul_u64_saturating@.split_0)
    (aws_mul_u64_saturating@.split
      aws_mul_u64_saturating@%sm_0
      aws_mul_u64_saturating@%_br_0
      aws_mul_u64_saturating@arg.1_0
      aws_mul_u64_saturating@arg.0_0)))
(rule (=> (aws_mul_u64_saturating@.split
      aws_mul_u64_saturating@%sm_0
      aws_mul_u64_saturating@%_br_0
      aws_mul_u64_saturating@arg.1_0
      aws_mul_u64_saturating@arg.0_0)
    (aws_mul_u64_saturating
      true
      false
      false
      aws_mul_u64_saturating@%sm_0
      aws_mul_u64_saturating@%sm_0
      aws_mul_u64_saturating@arg.0_0
      aws_mul_u64_saturating@arg.1_0
      aws_mul_u64_saturating@%_br_0)))
(rule (aws_mul_u32_saturating
  true
  true
  true
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@arg.0_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@%_br_0))
(rule (aws_mul_u32_saturating
  false
  true
  true
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@arg.0_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@%_br_0))
(rule (aws_mul_u32_saturating
  false
  false
  false
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@arg.0_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@%_br_0))
(rule (aws_mul_u32_saturating@_sm
  aws_mul_u32_saturating@%sm_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@arg.0_0))
(rule (=> (and (aws_mul_u32_saturating@_sm
           aws_mul_u32_saturating@%sm_0
           aws_mul_u32_saturating@arg.1_0
           aws_mul_u32_saturating@arg.0_0)
         true
         (=> aws_mul_u32_saturating@.split_0
             (and aws_mul_u32_saturating@.split_0 aws_mul_u32_saturating@_sm_0))
         aws_mul_u32_saturating@.split_0)
    (aws_mul_u32_saturating@.split
      aws_mul_u32_saturating@%sm_0
      aws_mul_u32_saturating@%_br_0
      aws_mul_u32_saturating@arg.1_0
      aws_mul_u32_saturating@arg.0_0)))
(rule (=> (aws_mul_u32_saturating@.split
      aws_mul_u32_saturating@%sm_0
      aws_mul_u32_saturating@%_br_0
      aws_mul_u32_saturating@arg.1_0
      aws_mul_u32_saturating@arg.0_0)
    (aws_mul_u32_saturating
      true
      false
      false
      aws_mul_u32_saturating@%sm_0
      aws_mul_u32_saturating@%sm_0
      aws_mul_u32_saturating@arg.0_0
      aws_mul_u32_saturating@arg.1_0
      aws_mul_u32_saturating@%_br_0)))
(rule (main@entry @nondet_int_0
            @nondet_uint64_t_0
            @nondet_bool_0
            @nondet_uint32_t_0
            main@%sm19_0
            main@%sm17_0
            main@%sm22_0
            main@%sm21_0
            main@%sm23_0
            main@%sm27_0
            main@%sm16_0
            main@%sm18_0
            main@%sm24_0
            main@%sm20_0
            main@%sm26_0
            main@%sm25_0))
(rule (let ((a!1 (= main@%_1_0 (+ (+ @s_common_log_subject_list_0 (* 0 8)) 0)))
      (a!2 (= main@%_2_0 (+ (+ @s_common_log_subject_list_0 (* 0 8)) 4))))
(let ((a!3 (and (main@entry @nondet_int_0
                            @nondet_uint64_t_0
                            @nondet_bool_0
                            @nondet_uint32_t_0
                            main@%sm19_0
                            main@%sm17_0
                            main@%sm22_0
                            main@%sm21_0
                            main@%sm23_0
                            main@%sm27_0
                            main@%sm16_0
                            main@%sm18_0
                            main@%sm24_0
                            main@%sm20_0
                            main@%sm26_0
                            main@%sm25_0)
                true
                (= main@%sm_0 main@%sm19_0)
                (= main@%sm1_0 main@%sm17_0)
                (= main@%sm2_0 main@%sm22_0)
                (= main@%sm3_0 main@%sm21_0)
                (= main@%sm4_0 main@%sm23_0)
                (= main@%sm5_0 main@%sm27_0)
                (= main@%sm6_0 main@%sm16_0)
                (= main@%sm7_0 main@%sm18_0)
                (= main@%sm8_0 main@%sm24_0)
                (= main@%sm9_0 main@%sm20_0)
                (= main@%sm10_0 main@%sm26_0)
                (= main@%sm11_0 main@%sm25_0)
                (= main@%_0_0
                   (+ @s_common_log_subject_infos_0 (* 0 60) (* 0 12)))
                (or (<= @s_common_log_subject_infos_0 0) (> main@%_0_0 0))
                a!1
                (or (<= @s_common_log_subject_list_0 0) (> main@%_1_0 0))
                (= main@%sm13_0 (store main@%sm12_0 main@%_1_0 main@%_0_0))
                a!2
                (or (<= @s_common_log_subject_list_0 0) (> main@%_2_0 0))
                (> @s_common_log_subject_list_0 0)
                (= main@%sm14_0 (store main@%sm13_0 main@%_2_0 5))
                (not main@%_3_0)
                (= main@%_4_0 @nondet_bool_0)
                (=> main@_16_0 (and main@_16_0 main@entry_0))
                (=> (and main@_16_0 main@entry_0) (not main@%_5_0))
                (=> main@_16_0 (= main@%_17_0 @nondet_bool_0))
                (=> main@_16_0 (= main@%not..i_0 (xor main@%_18_0 true)))
                (=> main@_16_0 (= main@%_19_0 (ite main@%not..i_0 (- 1) 0)))
                (=> main@_16_0 (= main@%_20_0 @nondet_uint32_t_0))
                (aws_mul_u32_saturating
                  main@_16_0
                  false
                  false
                  main@%sm14_0
                  main@%sh15_0
                  main@%_19_0
                  main@%_21_0
                  main@%_22_0)
                (=> main@_16_0 (= main@%_24_0 (= main@%_22_0 main@%_23_0)))
                (=> main@_16_0 (not main@%_24_0))
                (=> main@_6_0 (and main@_6_0 main@entry_0))
                (=> (and main@_6_0 main@entry_0) main@%_5_0)
                (=> main@_6_0 (= main@%_7_0 @nondet_int_0))
                (=> main@_6_0 (= main@%_9_0 (= main@%_8_0 0)))
                (=> main@_6_0 (= main@%_10_0 (ite main@%_9_0 (- 1) 0)))
                (=> main@_6_0 (= main@%_11_0 @nondet_uint64_t_0))
                (aws_mul_u64_saturating
                  main@_6_0
                  false
                  false
                  main@%sm14_0
                  main@%sh_0
                  main@%_10_0
                  main@%_12_0
                  main@%_13_0)
                (=> main@_6_0 (= main@%_15_0 (= main@%_13_0 main@%_14_0)))
                (=> main@_6_0 (not main@%_15_0))
                (=> main@verifier.error_0
                    (or (and main@verifier.error_0 main@_16_0)
                        (and main@verifier.error_0 main@_6_0)))
                (=> (and main@verifier.error_0 main@_16_0)
                    (= main@%shadow.mem.0.0_0 main@%sh15_0))
                (=> (and main@verifier.error_0 main@_6_0)
                    (= main@%shadow.mem.0.0_1 main@%sh_0))
                (=> (and main@verifier.error_0 main@_16_0)
                    (= main@%shadow.mem.0.0_2 main@%shadow.mem.0.0_0))
                (=> (and main@verifier.error_0 main@_6_0)
                    (= main@%shadow.mem.0.0_2 main@%shadow.mem.0.0_1))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!3 main@verifier.error.split))))
(query main@verifier.error.split)

