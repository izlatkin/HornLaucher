(set-info :original "../out/aws_mul_size_saturating_harness.c/aws_mul_size_saturating_harness0c78f.bc.txt")
(set-info :authors "SeaHorn v.10.0.0-rc0")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel aws_mul_u64_saturating@_tail (Int Int ))
(declare-rel aws_mul_u64_saturating@.split (Int Int Int ))
(declare-rel aws_mul_u64_saturating (Bool Bool Bool Int Int Int ))
(declare-rel aws_mul_u32_saturating@_tail (Int Int ))
(declare-rel aws_mul_u32_saturating@.split (Int Int Int ))
(declare-rel aws_mul_u32_saturating (Bool Bool Bool Int Int Int ))
(declare-rel main@entry (Int Int Int Int ))
(declare-rel main@verifier.error.split ())
(declare-var aws_mul_u64_saturating@arg.1_0 Int )
(declare-var aws_mul_u64_saturating@arg.0_0 Int )
(declare-var aws_mul_u64_saturating@%_br_0 Int )
(declare-var aws_mul_u64_saturating@_tail_0 Bool )
(declare-var aws_mul_u64_saturating@.split_0 Bool )
(declare-var aws_mul_u32_saturating@arg.1_0 Int )
(declare-var aws_mul_u32_saturating@arg.0_0 Int )
(declare-var aws_mul_u32_saturating@%_br_0 Int )
(declare-var aws_mul_u32_saturating@_tail_0 Bool )
(declare-var aws_mul_u32_saturating@.split_0 Bool )
(declare-var main@%_4_0 Int )
(declare-var @nondet_int_0 Int )
(declare-var main@%_5_0 Int )
(declare-var main@%_6_0 Bool )
(declare-var main@%_7_0 Int )
(declare-var main@%_8_0 Int )
(declare-var @nondet_uint64_t_0 Int )
(declare-var main@%_9_0 Int )
(declare-var main@%_10_0 Int )
(declare-var main@%_11_0 Int )
(declare-var main@%_12_0 Bool )
(declare-var main@%_14_0 Int )
(declare-var main@%_15_0 Bool )
(declare-var main@%not..i_0 Bool )
(declare-var main@%_16_0 Int )
(declare-var main@%_17_0 Int )
(declare-var @nondet_uint32_t_0 Int )
(declare-var main@%_18_0 Int )
(declare-var main@%_19_0 Int )
(declare-var main@%_20_0 Int )
(declare-var main@%_21_0 Bool )
(declare-var main@%_0_0 Bool )
(declare-var main@%_1_0 Int )
(declare-var main@%_2_0 Bool )
(declare-var @nondet_bool_0 Int )
(declare-var main@entry_0 Bool )
(declare-var main@_13_0 Bool )
(declare-var main@_3_0 Bool )
(declare-var main@verifier.error_0 Bool )
(declare-var main@verifier.error.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (aws_mul_u64_saturating
  true
  true
  true
  aws_mul_u64_saturating@arg.0_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@%_br_0))
(rule (aws_mul_u64_saturating
  false
  true
  true
  aws_mul_u64_saturating@arg.0_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@%_br_0))
(rule (aws_mul_u64_saturating
  false
  false
  false
  aws_mul_u64_saturating@arg.0_0
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@%_br_0))
(rule (aws_mul_u64_saturating@_tail
  aws_mul_u64_saturating@arg.1_0
  aws_mul_u64_saturating@arg.0_0))
(rule (=> (and (aws_mul_u64_saturating@_tail
           aws_mul_u64_saturating@arg.1_0
           aws_mul_u64_saturating@arg.0_0)
         true
         (=> aws_mul_u64_saturating@.split_0
             (and aws_mul_u64_saturating@.split_0
                  aws_mul_u64_saturating@_tail_0))
         aws_mul_u64_saturating@.split_0)
    (aws_mul_u64_saturating@.split
      aws_mul_u64_saturating@%_br_0
      aws_mul_u64_saturating@arg.1_0
      aws_mul_u64_saturating@arg.0_0)))
(rule (=> (aws_mul_u64_saturating@.split
      aws_mul_u64_saturating@%_br_0
      aws_mul_u64_saturating@arg.1_0
      aws_mul_u64_saturating@arg.0_0)
    (aws_mul_u64_saturating
      true
      false
      false
      aws_mul_u64_saturating@arg.0_0
      aws_mul_u64_saturating@arg.1_0
      aws_mul_u64_saturating@%_br_0)))
(rule (aws_mul_u32_saturating
  true
  true
  true
  aws_mul_u32_saturating@arg.0_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@%_br_0))
(rule (aws_mul_u32_saturating
  false
  true
  true
  aws_mul_u32_saturating@arg.0_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@%_br_0))
(rule (aws_mul_u32_saturating
  false
  false
  false
  aws_mul_u32_saturating@arg.0_0
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@%_br_0))
(rule (aws_mul_u32_saturating@_tail
  aws_mul_u32_saturating@arg.1_0
  aws_mul_u32_saturating@arg.0_0))
(rule (=> (and (aws_mul_u32_saturating@_tail
           aws_mul_u32_saturating@arg.1_0
           aws_mul_u32_saturating@arg.0_0)
         true
         (=> aws_mul_u32_saturating@.split_0
             (and aws_mul_u32_saturating@.split_0
                  aws_mul_u32_saturating@_tail_0))
         aws_mul_u32_saturating@.split_0)
    (aws_mul_u32_saturating@.split
      aws_mul_u32_saturating@%_br_0
      aws_mul_u32_saturating@arg.1_0
      aws_mul_u32_saturating@arg.0_0)))
(rule (=> (aws_mul_u32_saturating@.split
      aws_mul_u32_saturating@%_br_0
      aws_mul_u32_saturating@arg.1_0
      aws_mul_u32_saturating@arg.0_0)
    (aws_mul_u32_saturating
      true
      false
      false
      aws_mul_u32_saturating@arg.0_0
      aws_mul_u32_saturating@arg.1_0
      aws_mul_u32_saturating@%_br_0)))
(rule (main@entry @nondet_int_0 @nondet_uint64_t_0 @nondet_bool_0 @nondet_uint32_t_0))
(rule (let ((a!1 (and (main@entry @nondet_int_0
                            @nondet_uint64_t_0
                            @nondet_bool_0
                            @nondet_uint32_t_0)
                true
                (not main@%_0_0)
                (= main@%_1_0 @nondet_bool_0)
                (=> main@_13_0 (and main@_13_0 main@entry_0))
                (=> (and main@_13_0 main@entry_0) (not main@%_2_0))
                (=> main@_13_0 (= main@%_14_0 @nondet_bool_0))
                (=> main@_13_0 (= main@%not..i_0 (xor main@%_15_0 true)))
                (=> main@_13_0 (= main@%_16_0 (ite main@%not..i_0 (- 1) 0)))
                (=> main@_13_0 (= main@%_17_0 @nondet_uint32_t_0))
                (aws_mul_u32_saturating
                  main@_13_0
                  false
                  false
                  main@%_16_0
                  main@%_18_0
                  main@%_19_0)
                (=> main@_13_0 (= main@%_21_0 (= main@%_19_0 main@%_20_0)))
                (=> main@_13_0 (not main@%_21_0))
                (=> main@_3_0 (and main@_3_0 main@entry_0))
                (=> (and main@_3_0 main@entry_0) main@%_2_0)
                (=> main@_3_0 (= main@%_4_0 @nondet_int_0))
                (=> main@_3_0 (= main@%_6_0 (= main@%_5_0 0)))
                (=> main@_3_0 (= main@%_7_0 (ite main@%_6_0 (- 1) 0)))
                (=> main@_3_0 (= main@%_8_0 @nondet_uint64_t_0))
                (aws_mul_u64_saturating
                  main@_3_0
                  false
                  false
                  main@%_7_0
                  main@%_9_0
                  main@%_10_0)
                (=> main@_3_0 (= main@%_12_0 (= main@%_10_0 main@%_11_0)))
                (=> main@_3_0 (not main@%_12_0))
                (=> main@verifier.error_0
                    (or (and main@verifier.error_0 main@_13_0)
                        (and main@verifier.error_0 main@_3_0)))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!1 main@verifier.error.split)))
(query main@verifier.error.split)

