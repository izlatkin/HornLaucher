(set-info :original "../out/aws_is_power_of_two_harness.c/aws_is_power_of_two_harnessdc618.bc.txt")
(set-info :authors "SeaHorn v.10.0.0-rc0")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel aws_is_power_of_two@_tail (Int ))
(declare-rel aws_is_power_of_two@.split (Bool Int ))
(declare-rel aws_is_power_of_two (Bool Bool Bool Bool ))
(declare-rel main@entry (Int ))
(declare-rel main@entry.split ())
(declare-var aws_is_power_of_two@%_3_0 Int )
(declare-var aws_is_power_of_two@%_br_0 Bool )
(declare-var aws_is_power_of_two@_tail_0 Bool )
(declare-var aws_is_power_of_two@.split_0 Bool )
(declare-var main@%_0_0 Bool )
(declare-var main@%_3_0 Bool )
(declare-var main@%_5_0 Bool )
(declare-var main@%_4_0 Int )
(declare-var main@%_6_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@entry.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (aws_is_power_of_two true true true aws_is_power_of_two@%_br_0))
(rule (aws_is_power_of_two false true true aws_is_power_of_two@%_br_0))
(rule (aws_is_power_of_two false false false aws_is_power_of_two@%_br_0))
(rule (aws_is_power_of_two@_tail aws_is_power_of_two@%_3_0))
(rule (=> (and (aws_is_power_of_two@_tail aws_is_power_of_two@%_3_0)
         true
         (= aws_is_power_of_two@%_br_0 (= aws_is_power_of_two@%_3_0 1))
         (=> aws_is_power_of_two@.split_0
             (and aws_is_power_of_two@.split_0 aws_is_power_of_two@_tail_0))
         aws_is_power_of_two@.split_0)
    (aws_is_power_of_two@.split
      aws_is_power_of_two@%_br_0
      aws_is_power_of_two@%_3_0)))
(rule (=> (aws_is_power_of_two@.split
      aws_is_power_of_two@%_br_0
      aws_is_power_of_two@%_3_0)
    (aws_is_power_of_two true false false aws_is_power_of_two@%_br_0)))
(rule (main@entry main@%_4_0))
(rule (=> (and (main@entry main@%_4_0)
         true
         (not main@%_0_0)
         (aws_is_power_of_two true false false main@%_3_0)
         (= main@%_5_0 (= main@%_4_0 1))
         (= main@%_6_0 (= main@%_3_0 main@%_5_0))
         (not main@%_6_0)
         (=> main@entry.split_0 (and main@entry.split_0 main@entry_0))
         main@entry.split_0)
    main@entry.split))
(query main@entry.split)

