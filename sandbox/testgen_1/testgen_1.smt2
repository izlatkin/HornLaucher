(set-info :original "../sandbox/testgen_1/testgen_1.bc")
(set-info :authors "SeaHorn v.10.0.0-rc0")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@_sm1 ((Array Int Int) ))
(declare-rel main@empty.loop (Int Int ))
(declare-rel main@_.03 (Int Int Int Int Int ))
(declare-rel main@_ret ())
(declare-var main@%_15_0 Int )
(declare-var main@%_br2_0 Bool )
(declare-var main@%_9_0 Bool )
(declare-var main@%.17_2 Int )
(declare-var main@%.26_2 Int )
(declare-var main@%.pn_2 Int )
(declare-var main@%_4_0 Int )
(declare-var main@%_5_0 Bool )
(declare-var main@%_.14_0 Int )
(declare-var main@%not._0 Bool )
(declare-var main@%_.12_0 Int )
(declare-var main@%_br_0 Bool )
(declare-var main@%nd.loop.cond_0 Bool )
(declare-var main@%.03_2 Int )
(declare-var main@%.01_2 Int )
(declare-var main@%sm1_0 (Array Int Int) )
(declare-var main@%sm_0 (Array Int Int) )
(declare-var main@%_call_0 Bool )
(declare-var main@_sm1_0 Bool )
(declare-var @.str_0 Int )
(declare-var main@%loop.bound_0 Int )
(declare-var main@empty.loop_0 Bool )
(declare-var main@empty.loop.body_0 Bool )
(declare-var main@empty.loop_1 Bool )
(declare-var main@_.03_0 Bool )
(declare-var main@%.03_0 Int )
(declare-var main@%.01_0 Int )
(declare-var main@%.0_0 Int )
(declare-var main@%.03_1 Int )
(declare-var main@%.01_1 Int )
(declare-var main@%.0_1 Int )
(declare-var main@%.14_0 Int )
(declare-var main@%.12_0 Int )
(declare-var main@.thread_0 Bool )
(declare-var main@%_spec.select6_0 Int )
(declare-var main@%spec.select6_0 Int )
(declare-var main@_11_0 Bool )
(declare-var main@%_12_0 Int )
(declare-var main@_.17_0 Bool )
(declare-var |tuple(main@_11_0, main@_.17_0)| Bool )
(declare-var main@%.17_0 Int )
(declare-var main@%.26_0 Int )
(declare-var main@%.pn_0 Int )
(declare-var main@%.17_1 Int )
(declare-var main@%.26_1 Int )
(declare-var main@%.pn_1 Int )
(declare-var main@%.254_0 Int )
(declare-var main@_.03_1 Bool )
(declare-var main@%.0_2 Int )
(declare-var main@_ret_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (main@_sm1 main@%sm1_0))
(rule (=> (and (main@_sm1 main@%sm1_0)
         true
         (= main@%sm_0 main@%sm1_0)
         (= main@%_call_0 (= main@%loop.bound_0 0))
         main@%_call_0
         (=> main@empty.loop_0 (and main@empty.loop_0 main@_sm1_0))
         main@empty.loop_0)
    (main@empty.loop @.str_0 main@%loop.bound_0)))
(rule (=> (and (main@empty.loop @.str_0 main@%loop.bound_0)
         true
         (=> main@empty.loop.body_0
             (and main@empty.loop.body_0 main@empty.loop_0))
         (=> (and main@empty.loop.body_0 main@empty.loop_0)
             main@%nd.loop.cond_0)
         (=> main@empty.loop_1 (and main@empty.loop_1 main@empty.loop.body_0))
         main@empty.loop_1)
    (main@empty.loop @.str_0 main@%loop.bound_0)))
(rule (=> (and (main@empty.loop @.str_0 main@%loop.bound_0)
         true
         (=> main@_.03_0 (and main@_.03_0 main@empty.loop_0))
         (=> (and main@_.03_0 main@empty.loop_0) (not main@%nd.loop.cond_0))
         (=> (and main@_.03_0 main@empty.loop_0) (= main@%.03_0 66743))
         (=> (and main@_.03_0 main@empty.loop_0) (= main@%.01_0 88947))
         (=> (and main@_.03_0 main@empty.loop_0) (= main@%.0_0 1835))
         (=> (and main@_.03_0 main@empty.loop_0) (= main@%.03_1 main@%.03_0))
         (=> (and main@_.03_0 main@empty.loop_0) (= main@%.01_1 main@%.01_0))
         (=> (and main@_.03_0 main@empty.loop_0) (= main@%.0_1 main@%.0_0))
         main@_.03_0)
    (main@_.03 @.str_0 main@%.03_1 main@%.01_1 main@%.0_1 main@%loop.bound_0)))
(rule (let ((a!1 (=> main@_.17_0 (= main@%_15_0 (+ @.str_0 (* 0 4) (* 0 1))))))
(let ((a!2 (and (main@_.03 @.str_0
                           main@%.03_0
                           main@%.01_0
                           main@%.0_0
                           main@%loop.bound_0)
                true
                (= main@%_4_0 (+ main@%.01_0 main@%.03_0))
                (= main@%_5_0 (> main@%_4_0 4))
                (= main@%_.14_0 (ite main@%_5_0 1 0))
                (= main@%.14_0 (+ main@%.03_0 main@%_.14_0))
                (= main@%not._0 (xor main@%_5_0 true))
                (= main@%_.12_0 (ite main@%not._0 1 0))
                (= main@%.12_0 (+ main@%.01_0 main@%_.12_0))
                (= main@%_br_0 (< main@%.14_0 6))
                (=> main@.thread_0 (and main@.thread_0 main@_.03_0))
                (=> (and main@.thread_0 main@_.03_0) (not main@%_br_0))
                (=> main@.thread_0 (= main@%_9_0 (> main@%.12_0 main@%.14_0)))
                (=> main@.thread_0
                    (= main@%_spec.select6_0 (ite main@%_9_0 1 0)))
                (=> main@.thread_0
                    (= main@%spec.select6_0 (ite main@%_9_0 main@%.12_0 0)))
                (=> main@_11_0 (and main@_11_0 main@_.03_0))
                (=> (and main@_11_0 main@_.03_0) main@%_br_0)
                (=> main@_11_0 (= main@%_12_0 (+ main@%.0_0 1)))
                (=> main@_11_0
                    (= main@%_br2_0 (= main@%_12_0 main@%loop.bound_0)))
                (=> |tuple(main@_11_0, main@_.17_0)| main@_11_0)
                (=> main@_.17_0
                    (or (and main@_.17_0 main@.thread_0)
                        |tuple(main@_11_0, main@_.17_0)|))
                (=> |tuple(main@_11_0, main@_.17_0)| (not main@%_br2_0))
                (=> (and main@_.17_0 main@.thread_0) (= main@%.17_0 main@%.0_0))
                (=> (and main@_.17_0 main@.thread_0)
                    (= main@%.26_0 main@%spec.select6_0))
                (=> (and main@_.17_0 main@.thread_0)
                    (= main@%.pn_0 main@%_spec.select6_0))
                (=> |tuple(main@_11_0, main@_.17_0)|
                    (= main@%.17_1 main@%_12_0))
                (=> |tuple(main@_11_0, main@_.17_0)|
                    (= main@%.26_1 main@%.12_0))
                (=> |tuple(main@_11_0, main@_.17_0)| (= main@%.pn_1 (- 1)))
                (=> (and main@_.17_0 main@.thread_0)
                    (= main@%.17_2 main@%.17_0))
                (=> (and main@_.17_0 main@.thread_0)
                    (= main@%.26_2 main@%.26_0))
                (=> (and main@_.17_0 main@.thread_0)
                    (= main@%.pn_2 main@%.pn_0))
                (=> |tuple(main@_11_0, main@_.17_0)|
                    (= main@%.17_2 main@%.17_1))
                (=> |tuple(main@_11_0, main@_.17_0)|
                    (= main@%.26_2 main@%.26_1))
                (=> |tuple(main@_11_0, main@_.17_0)|
                    (= main@%.pn_2 main@%.pn_1))
                (=> main@_.17_0 (= main@%.254_0 (+ main@%.pn_2 main@%.14_0)))
                a!1
                (=> main@_.17_0 (or (<= @.str_0 0) (> main@%_15_0 0)))
                (=> main@_.03_1 (and main@_.03_1 main@_.17_0))
                (=> (and main@_.03_1 main@_.17_0) (= main@%.03_1 main@%.254_0))
                (=> (and main@_.03_1 main@_.17_0) (= main@%.01_1 main@%.26_2))
                (=> (and main@_.03_1 main@_.17_0) (= main@%.0_1 main@%.17_2))
                (=> (and main@_.03_1 main@_.17_0) (= main@%.03_2 main@%.03_1))
                (=> (and main@_.03_1 main@_.17_0) (= main@%.01_2 main@%.01_1))
                (=> (and main@_.03_1 main@_.17_0) (= main@%.0_2 main@%.0_1))
                main@_.03_1)))
  (=> a!2
      (main@_.03 @.str_0 main@%.03_2 main@%.01_2 main@%.0_2 main@%loop.bound_0)))))
(rule (let ((a!1 (and (main@_.03 @.str_0
                           main@%.03_0
                           main@%.01_0
                           main@%.0_0
                           main@%loop.bound_0)
                true
                (= main@%_4_0 (+ main@%.01_0 main@%.03_0))
                (= main@%_5_0 (> main@%_4_0 4))
                (= main@%_.14_0 (ite main@%_5_0 1 0))
                (= main@%.14_0 (+ main@%.03_0 main@%_.14_0))
                (= main@%not._0 (xor main@%_5_0 true))
                (= main@%_.12_0 (ite main@%not._0 1 0))
                (= main@%.12_0 (+ main@%.01_0 main@%_.12_0))
                (= main@%_br_0 (< main@%.14_0 6))
                (=> main@_11_0 (and main@_11_0 main@_.03_0))
                (=> (and main@_11_0 main@_.03_0) main@%_br_0)
                (=> main@_11_0 (= main@%_12_0 (+ main@%.0_0 1)))
                (=> main@_11_0
                    (= main@%_br2_0 (= main@%_12_0 main@%loop.bound_0)))
                (=> main@_ret_0 (and main@_ret_0 main@_11_0))
                (=> (and main@_ret_0 main@_11_0) main@%_br2_0)
                main@_ret_0)))
  (=> a!1 main@_ret)))
(query main@_ret)

